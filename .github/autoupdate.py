#!/usr/bin/env python

import sys
import subprocess

REPO = 'fopina/docker-octoprint'


def main():
    if len(sys.argv) < 2:
        print('missing token')
        exit(2)
    
    token = sys.argv[1]
    subprocess.check_call('pip-upgrade --skip-package-installation -p octoprint', shell=True)
    diff = subprocess.check_output('git diff', shell=True)
    if not diff:
        print('No updates were found')
        exit(0)
    
    with open('requirements.txt') as f:
        new_version = f.read().strip().splitlines()[-1].split('=')[-1]
    print(f'Update detected: {new_version}')
    subprocess.check_call('git config user.email updater@devnull.localhost', shell=True)
    subprocess.check_call('git config user.name Updater', shell=True)

    branch = f'dependency-update/x1octoprint-{new_version}'
    subprocess.check_call(['git', 'checkout', '-b', branch])
    subprocess.check_call(['git', 'commit', '-a', '-m', f'bump OctoPrint to {new_version}'])
    subprocess.check_call(['git', 'push', 'origin', branch])

"""
echo "https://api.github.com/repos/${REPO}/pulls"

response=$(curl -f --write-out "%{message}\n" -X POST -H "Content-Type: application/json" -H "Authorization: token $1" \
        --data '{"title":"Autoupdate dependencies","head": "'"${BRANCH}"'","base":"main", "body":"Auto-generated pull request. \nThis pull request is generated by GitHub action based on the provided update commands."}' \
        "https://api.github.com/repos/${REPO}/pulls")

echo $response

if [[ "$response" == *"already exist"* ]]; then
    echo "Pull request already opened. Updates were pushed to the existing PR instead"
    exit 0
fi
"""


if __name__ == '__main__':
    main()
